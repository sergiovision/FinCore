<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <LangVersion>9.0</LangVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <IsDocker>False</IsDocker>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OutputPath>..\bin\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <OutputPath>..\bin\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'Docker' ">
    <StartAction>Project</StartAction>
    <ExternalConsole>true</ExternalConsole>
    <EnvironmentVariables>
      <Variable name="ASPNETCORE_ENVIRONMENT" value="Production" />
    </EnvironmentVariables>
    <LaunchBrowser></LaunchBrowser>
    <ApplicationURL>http://localhost:2020</ApplicationURL>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Autofac" Version="6.2.0" />
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="7.1.0" />
    <PackageReference Include="log4net" Version="2.0.12" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="5.0.9" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.6" />
    <PackageReference Include="Microsoft.Extensions.Logging.Log4Net.AspNetCore" Version="5.0.1" />
    <PackageReference Include="Quartz" Version="3.3.2" />
    <PackageReference Include="Topshelf" Version="4.3.0" />
    <PackageReference Include="TopShelf.ServiceInstaller" Version="4.3.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.6" />
    <PackageReference Include="NetCoreServer" Version="5.1.0" />
    <PackageReference Include="Antlr3.Runtime" Version="3.5.1" />
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.html" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.html" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.scss" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.scss" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.ts" />
    <None Include="ClientApp\src\app\views\tables\metasymbols\wallets.component.ts" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.scss" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.scss" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.ts" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.ts" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.html" />
    <None Include="ClientApp\src\app\views\tables\settings\rates.component.html" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.ts" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.ts" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.html" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.html" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.scss" />
    <None Include="ClientApp\src\app\views\tables\person\settings.component.scss" />
    <None Include="ClientApp\src\app\views\doc\tview.component.spec.ts" />
    <None Include="ClientApp\src\app\views\doc\tview.component.spec.ts" />
    <None Include="ClientApp\src\app\views\doc\tview.component.ts" />
    <None Include="ClientApp\src\app\views\doc\tview.component.ts" />
    <None Include="ClientApp\src\app\views\doc\tview.component.html" />
    <None Include="ClientApp\src\app\views\doc\tview.component.html" />
    <None Include="ClientApp\src\app\views\doc\tview.component.css" />
    <None Include="ClientApp\src\app\views\doc\tview.component.css" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.scss" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.scss" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.html" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.html" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.ts" />
    <None Include="ClientApp\src\app\views\dgauge\investments.component.ts" />
    <None Include="$(SpaRoot)**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\BusinessLogic\BusinessLogic.csproj" />
    <ProjectReference Include="..\BusinessObjects\BusinessObjects.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="log4net.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition="'$(Configuration)' == 'Release' And $(IsDocker) == 'False'">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>